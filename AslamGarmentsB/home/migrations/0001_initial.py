# Generated by Django 5.0.6 on 2024-11-16 15:28

import django.contrib.auth.models
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import home.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=50)),
                ('hexcode', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='profile_pic/')),
                ('gstNo', models.CharField(blank=True, max_length=200, null=True, unique=True, validators=[home.models.validate_gst])),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.CharField(max_length=200)),
                ('longitude', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('stock', models.PositiveIntegerField()),
                ('market_price', models.FloatField()),
                ('selling_price', models.FloatField()),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=500), blank=True, default=list, size=None)),
                ('rating', models.FloatField(default=0)),
                ('buy_count', models.PositiveIntegerField(default=0)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, null=True, size=None)),
                ('fabric', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text="Material of the product, e.g., 'cotton, silk, wool'", null=True, size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gsm', models.FloatField(blank=True, help_text='Thickness of the material', null=True)),
                ('product_type', models.CharField(blank=True, max_length=50, null=True)),
                ('sleeve', models.CharField(blank=True, max_length=50, null=True)),
                ('fit', models.CharField(blank=True, max_length=50, null=True)),
                ('ideal_for', models.CharField(blank=True, max_length=50, null=True)),
                ('net_weight', models.FloatField(blank=True, help_text='Net weight in grams', null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('product_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.color')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='color',
            name='products',
            field=models.ManyToManyField(blank=True, to='home.product', verbose_name='Products Colors'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='category_pic/')),
                ('products', models.ManyToManyField(blank=True, to='home.product')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(default='NA', max_length=50)),
                ('product', models.ManyToManyField(blank=True, to='home.product')),
            ],
            options={
                'verbose_name': 'Product Group',
                'verbose_name_plural': 'Product Groups',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('pincode', models.CharField(max_length=200)),
                ('locality', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('landmark', models.CharField(blank=True, max_length=200, null=True)),
                ('alternate_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.location')),
                ('user', models.ForeignKey(help_text='User who is going to receive the product', on_delete=django.db.models.deletion.CASCADE, to='home.customer')),
            ],
            options={
                'verbose_name': 'Shipping Address',
                'verbose_name_plural': 'Shipping Addresses',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('out_for_delivery', 'Out for delivery'), ('delivered', 'Delivered')], default='pending', max_length=50)),
                ('payment', models.CharField(choices=[('cod', 'Cash on delivery'), ('online', 'Online payment')], default='cod', max_length=200)),
                ('tracking_number', models.CharField(blank=True, max_length=200, null=True)),
                ('carrier', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.customer')),
                ('products', models.ManyToManyField(blank=True, to='home.cartitem')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.shippingaddress')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Extra Extra Large')], max_length=50)),
                ('bust', models.FloatField(blank=True, null=True)),
                ('chest', models.FloatField(blank=True, null=True)),
                ('shoulder', models.FloatField(blank=True, null=True)),
                ('top_length', models.FloatField(blank=True, null=True)),
                ('sleeve_length', models.FloatField(blank=True, null=True)),
                ('cuff_circumference', models.FloatField(blank=True, null=True)),
                ('bicep_circumference', models.FloatField(blank=True, null=True)),
                ('hip', models.FloatField(blank=True, null=True)),
                ('rise', models.FloatField(blank=True, null=True)),
                ('waist', models.FloatField(blank=True, null=True)),
                ('thigh', models.FloatField(blank=True, null=True)),
                ('pant_length', models.FloatField(blank=True, null=True)),
                ('inseam_length', models.FloatField(blank=True, null=True)),
                ('knee_circumference', models.FloatField(blank=True, null=True)),
                ('ankle_circumference', models.FloatField(blank=True, null=True)),
                ('dress_length', models.FloatField(blank=True, null=True)),
                ('shoulder_to_hip', models.FloatField(blank=True, null=True)),
                ('shoulder_to_knee', models.FloatField(blank=True, null=True)),
                ('shoulder_to_waist', models.FloatField(blank=True, null=True)),
                ('shoulder_to_ankle', models.FloatField(blank=True, null=True)),
                ('neck_circumference', models.FloatField(blank=True, null=True)),
                ('products', models.ManyToManyField(blank=True, related_name='size_set', to='home.product', verbose_name='Products Sizes')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='avail_size',
            field=models.ManyToManyField(blank=True, related_name='products_sizes', to='home.size'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.size'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.size'),
        ),
    ]
